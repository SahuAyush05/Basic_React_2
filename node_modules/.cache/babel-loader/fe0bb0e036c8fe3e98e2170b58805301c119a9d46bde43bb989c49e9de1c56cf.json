{"ast":null,"code":"var _jsxFileName = \"H:\\\\New folder\\\\Basic_React_2\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === 'User_Input') {\n    return {\n      value: action.val,\n      is\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false\n  });\n\n  // useEffect(()=>{\n\n  //   const indentifie=setTimeout(()=>{\n  //     console.log('check validity!')\n  //     setFormIsValid(\n  //       enteredEmail.includes('@')&& enteredPassword.trim().length>6\n  //     )\n  //   },500);\n  //   return ()=>{\n  //     console.log('hold');\n  //     clearTimeout(indentifie);\n  //   }\n  // },[enteredEmail,enteredPassword])\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: 'Use_Input',\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes(\"@\") && enteredPassword.trim().length > 6);\n  };\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n  const validateEmailHandler = () => {\n    setEmailIsValid(emailState.isValid);\n  };\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"OjZLQAPhiann9MOf0R/laRmb8wk=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useReducer","useState","Card","classes","Button","jsxDEV","_jsxDEV","emailReducer","state","action","type","value","val","is","isValid","Login","props","_s","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","emailChangeHandler","event","target","includes","trim","length","passwordChangeHandler","validateEmailHandler","setEmailIsValid","validatePasswordHandler","submitHandler","preventDefault","onLogin","className","login","children","onSubmit","control","invalid","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","onBlur","actions","btn","disabled","_c","$RefreshReg$"],"sources":["H:/New folder/Basic_React_2/src/components/Login/Login.js"],"sourcesContent":["import React, { useEffect, useReducer, useState } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst emailReducer = (state, action) => {\n  if(action.type==='User_Input'){\n    return {value:action.val , is}\n  }\n\n  return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false,\n  });\n\n  // useEffect(()=>{\n\n  //   const indentifie=setTimeout(()=>{\n  //     console.log('check validity!')\n  //     setFormIsValid(\n  //       enteredEmail.includes('@')&& enteredPassword.trim().length>6\n  //     )\n  //   },500);\n  //   return ()=>{\n  //     console.log('hold');\n  //     clearTimeout(indentifie);\n  //   }\n  // },[enteredEmail,enteredPassword])\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({type:'Use_Input',val:event.target.value});\n\n    setFormIsValid(\n      event.target.value.includes(\"@\") && enteredPassword.trim().length > 6\n    );\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n\n    setFormIsValid(\n      emailState.isValid && event.target.value.trim().length > 6\n    );\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(emailState.isValid);\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n           emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}